package de.monticore.lang;

/**
 * @author Robin Wolters
*/

grammar SD extends ocl.monticoreocl.OCL { 

    /*========================================================================*/
    /*================================ TODOs =================================*/
    /*========================================================================*/
    
    // Referenz zu ObjectDeclaration in ObjectReference
    // Comment grammar JavaDoc-Style   
       
    /*========================================================================*/
    /*=============================== TOKENS =================================*/
    /*========================================================================*/
    
          
    /*========================================================================*/
    /*=========================== CompilationUnit ============================*/
    /*========================================================================*/
    
    SDArtifact = 
    	PackageDeclaration?
    	ImportStatement*
    	SequenceDiagram;
    	
    PackageDeclaration = 
    	"package" 
    	QualifiedName&
    	";";
    	
    ImportStatement = 
    	"import"
    	QualifiedName&
    	";";
    	
    /*========================================================================*/
    /*============================ ENUMERATIONS ==============================*/
    /*========================================================================*/
    
    enum Arrow = 
    	LEFT: "<-"  | RIGHT: "->" ;
    enum DashedArrow = 
    	LEFT: "<--" | RIGHT: "-->";

    /*========================================================================*/
    /*================== INTERFACES AND EXTERNAL SYMBOLS =====================*/
    /*========================================================================*/

    interface Interaction;

    /*========================================================================*/
    /*=================== Global Sequence Diagram Stuff ======================*/
    /*========================================================================*/

	symbol scope SequenceDiagram = 
		"sequencediagram" 
		SDStereotype* 
		SDCompleteness? 
		Name 
		"{" 
		(ObjectDeclaration ";")*
		SDElement* 
		"}";
		
	symbol ObjectDeclaration = 
		SDStereotype*
		SDCompleteness?
		(	
			Name |
			Name ":" ofType:Name |
			":" ofType:Name |
			["class"] Name
		);	
	
	SDElement = 
		SDActivity |
		(Interaction ";") | 
		OCLBlock | 
		Java;
		
	SDActivity = 
		"{"
		SDElement*
		"}";
		
	ObjectReference = 
		Name@ObjectDeclaration |
		"(" inlineDeclaration: ObjectDeclaration ")";
				
	SDStereotype = 
		"<<" Name ">>";
	
	SDCompleteness =
		(
		completeness : "(C)" |
		completeness : "..." |
		completeness : "<<match:complete>>"|
		completeness : "<<match:free>>"    |
		completeness : "<<match:visible>>" |
		completeness : "<<match:initial>>" 
		);
	
    /*========================================================================*/
    /*=========================== Interactions ===============================*/
    /*========================================================================*/

	
	MethodCall implements Interaction = 
		left:ObjectReference 
		Arrow 
		right:ObjectReference 
		":" 
		SDStereotype?
		Method;
		
	Return implements Interaction = 
		left:ObjectReference 
		DashedArrow 
		right:ObjectReference 
		":" 
		ReturnStatement?;
	
	Exception implements Interaction = 
		left:ObjectReference
		DashedArrow 
		right:ObjectReference 
		":" 
		Name
		Args?;
		
	Method = 
		StaticModifier?
		Name 
		Args?;
		
	Constructor extends Method =
		"new" 
		Name
		Args?;
				
	StaticModifier = 
		["static"]?;
				
	Args = 
		"("
		ParamList?
		")";
		
	ParamList =
		incomplete:["..."] |
		( (Param ",")* Param);
		
	Param = 
		String | 
		Name | 
		Num_Int;
	
	ReturnStatement = 
		"return" 
		Result?;
	
	Result = 
		incomplete:["..."] |
		QualifiedName;
		
    /*========================================================================*/
    /*=================== Integration of other Languages =====================*/
    /*========================================================================*/
	
	OCLBlock = 
		"<" 
		(context:Name ":")? 
		"["
		SDOCLExpression
		"]"
		">";
		
	SDOCLExpression = 
		OCLExpression;
	
	Java = 
		"{{" String "}}";

    
}