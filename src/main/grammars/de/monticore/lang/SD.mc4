package de.monticore.lang;

grammar SD extends de.monticore.common.Common { 

    /*========================================================================*/
    /*================================ TODOs =================================*/
    /*========================================================================*/
    
    // Stereotypen & Mehr in "SD FÃ¤hnchen"
    // Complete und Incomplete in Objekten
    // Match:complete, ... in SD
    // Exception-Example
      
    /*========================================================================*/
    /*=========================== CompilationUnit ============================*/
    /*========================================================================*/

    /*========================================================================*/
    /*================== INTERFACES AND EXTERNAL SYMBOLS =====================*/
    /*========================================================================*/

    /*========================================================================*/
    /*=============================== TOKENS =================================*/
    /*========================================================================*/

    /*========================================================================*/
    /*============================ ENUMERATIONS ==============================*/
    /*========================================================================*/
    
    enum Arrow = LEFT: "<-" | RIGHT: "->";
    enum DashedArrow = LEFT: "<--" | RIGHT: "-->";
    Modifier = static: "static";

    /*========================================================================*/
    /*============================== Grammar =================================*/
    /*========================================================================*/

	SequenceDiagram = 
		"sequencediagram" Name "{" 
		SDElement* 
		"}";
	
	SDElement = 
		ObjectDeclaration | 
		Interaction | 
		OCL | 
		Java;
	
	ObjectDeclaration = 
		Name ":" OfType ";";
	
	OfType = 
		Name;
	
	Interaction = 
		MethodCall | 
		Return | 
		Exception;
	
	MethodCall = 
		Object Arrow Object ":" 
		Stereotype? Method ";";
		
	Object = 
		Name;
		
	Stereotype = 
		"<<" Name ">>";
		
	Method = 
		Modifier? 
		Name "(" Params? ")";
		
	Params = 
		Name;
	
	Return = 
		Object DashedArrow Object ":" 
		"return" Result ";";
		
	Result = 
		Name?;
	
	Exception = 
		Object DashedArrow Object ":" 
		Method ";";
	
	OCL = 
		"<" String ">";
	
	Java = 
		"{" String "}";
   
    
}