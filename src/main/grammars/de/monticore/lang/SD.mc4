package de.monticore.lang;

grammar SD extends de.monticore.common.Common { 

    /*========================================================================*/
    /*================================ TODOs =================================*/
    /*========================================================================*/
    
    // sequencediagram for ... (SCs)
    // Stereotypen & Mehr in "SD Fähnchen"
    // Complete und Incomplete in Objekten
    // Match:complete, ... in SD
    // Aktivitätsbalken
       
    /*========================================================================*/
    /*=============================== TOKENS =================================*/
    /*========================================================================*/
    
    token NameWithExtras = (Name? '-' Name?)+ ;
      
    /*========================================================================*/
    /*=========================== CompilationUnit ============================*/
    /*========================================================================*/
    
    SDCompilationUnit = 
    	PackageDeclaration?
    	ImportStatement*
    	SequenceDiagram;
    	
    PackageDeclaration = 
    	"package" 
    	QualifiedName
    	";";
    	
    ImportStatement = 
    	"import"
    	QualifiedName
    	";";

    /*========================================================================*/
    /*================== INTERFACES AND EXTERNAL SYMBOLS =====================*/
    /*========================================================================*/

    interface Interaction;

    /*========================================================================*/
    /*============================ ENUMERATIONS ==============================*/
    /*========================================================================*/
    
    enum Arrow = 
    	LEFT: "<-"  | RIGHT: "->" ;
    enum DashedArrow = 
    	LEFT: "<--" | RIGHT: "-->";

    /*========================================================================*/
    /*=================== Global Sequence Diagram Stuff ======================*/
    /*========================================================================*/

	SequenceDiagram = 
		"sequencediagram" Name "{" 
		SDElement* 
		"}";
	
	SDElement = 
		(ObjectDeclaration ";") | 
		(Interaction ";") | 
		OCL | 
		Java;
		
	Stereotype = 
		"<<" Name ">>";		
		
	ObjectReference = 
		Name | 
		"(" ObjectDeclaration ")";
		
	symbol ObjectDeclaration = 
		Name |
		Name ":" ofType:Name |
		":" ofType:Name;		

    /*========================================================================*/
    /*=========================== Interactions ===============================*/
    /*========================================================================*/

	
	MethodCall implements Interaction = 
		left:ObjectReference 
		Arrow 
		right:ObjectReference 
		":" 
		Stereotype*
		Method;
		
	Return implements Interaction = 
		left:ObjectReference 
		DashedArrow 
		right:ObjectReference 
		":" 
		ReturnStatement?;
	
	Exception implements Interaction = 
		left:ObjectReference
		DashedArrow 
		right:ObjectReference 
		":" 
		Name
		Args?;
		
	Method = 
		StaticModifier?
		Name 
		Args?;
		
	Constructor extends Method =
		"new" 
		Name
		Args?;
				
	StaticModifier = 
		["static"]?;
				
	Args = 
		"("
		ParamList?
		")";
		
	ParamList =
		incomplete:["..."] |
		( (Param ",")* Param);
		
	Param = 
		String | 
		Name | 
		Num_Int;
	
	ReturnStatement = 
		"return" 
		Result?;
	
	Result = 
		incomplete:["..."] |
		Name;
		
    /*========================================================================*/
    /*=================== Integration of other Languages =====================*/
    /*========================================================================*/
	
	OCL = 
		"<" String ">";
	
	Java = 
		"{" String "}";

    
}