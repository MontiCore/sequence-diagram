package de.monticore.lang;

component grammar SD4Code extends de.monticore.lang.SDBase,
                                  de.monticore.lang.BasicSDModifiers,
                                  de.monticore.expressions.CommonExpressions {

  /*
   * Actions for method invocations.
   */
  MethodInvocationAction implements OrdinaryInteractionAction =
    MethodInvocationActionModifier* ["static"]? Name Arguments?;

  /**
  * Extension point for MethodModifiers for MethodInvocationActions.
  */
  interface MethodInvocationActionModifier;

  TriggerModifier implements MethodInvocationActionModifier = "trigger";

  /*
   * Actions for constructor calls.
   */
  ConstructorAction implements OrdinaryInteractionAction =
    "new" MCQualifiedName Arguments?;

  /*
   * Extension point for actions occurring on interactions
   * where a method returns the control flow to its environment,
   * such as returns and exceptions.
   */
  interface EndOfMethodAction extends Action;

  /*
   * Actions for returns.
   */
  ReturnAction implements EndOfMethodAction =
    ("return" Expression)?;

  /*
   * Actions for exceptions.
   */
  ExceptionAction implements EndOfMethodAction =
    "throw" MCQualifiedName Arguments?;

  EndOfMethodInteraction implements Interaction =
    target:InteractionEntity? "<--"
    source:InteractionEntity?
    ":" Action; // only EndOfMethodActions are allowed.

  /**
   * IncompleteExpression is introduced to enable modeling of
   * incomplete specifications of arguments, for example, used in
   * method invocations, exceptions, returns, etc.
   */
  IncompleteExpression implements Expression =
    "...";

  /**
   * ClassInteractionEntity enables to use classes as the sources and targets
   * of interactions. This enables modeling the invocation of static methods.
   */
  ClassInteractionEntity implements InteractionEntity =
    "class" MCObjectType;
}
