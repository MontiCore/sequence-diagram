package de.monticore.lang;

component grammar SDBase extends de.monticore.MCBasics,
                                 de.monticore.types.MCBasicTypes {

    symbol scope SequenceDiagram = MatchModifier? "sequencediagram" Name
        "{"
            SDObject*
            SDElement*
        "}"
    ;

    interface MatchModifier;

    interface SDElement;

    symbol SDObject =
        MatchModifier?
        (
            Name
        |
            Name? ":" MCObjectType
        |
            "class" MCObjectType
        )
    ;

    astrule SDObject =
        method public String getName() {
            if (isPresentName()) {
                return this.name.get();
            }
            return "";
        }
    ;

    ObjectReference =
        Name@SDObject
        | "(" inlineDeclaration:SDObject ")"
    ;

    Interaction implements SDElement =
        left:ObjectReference
        Arrow
        right:ObjectReference
        ":" Action
    ;

    interface Arrow;

    interface Action;
}
